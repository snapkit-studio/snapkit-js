name: PR Checks

on:
  pull_request:
    paths:
      - 'packages/*/package.json'
      - 'apps/*/package.json'
      - '.github/workflows/pr-checks.yml'

jobs:
  validate-workspace-refs:
    name: Validate Workspace References
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Check for workspace references
        run: |
          echo "üîç Checking all packages for workspace references..."

          # Check all package.json files in packages directory
          for package in packages/*/package.json; do
            if [ -f "$package" ]; then
              echo "Checking $package..."
              node scripts/check-workspace-refs.js "$package"
              if [ $? -ne 0 ]; then
                echo "::error file=$package::Workspace references found in production dependencies"
                exit 1
              fi
            fi
          done

          echo "‚úÖ All packages are clean - no workspace references in production dependencies"

  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm turbo lint

      - name: Run type checking
        run: pnpm turbo check-types

  test-external-installation:
    name: Test External Installation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ['@snapkit-studio/core', '@snapkit-studio/react', '@snapkit-studio/nextjs']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Build package locally
        run: |
          # Install pnpm
          npm install -g pnpm@9

          # Install dependencies
          pnpm install --frozen-lockfile

          # Build packages
          pnpm turbo build --filter=${{ matrix.package }}

      - name: Create test project
        run: |
          # Create temporary directory for testing
          cd /tmp
          mkdir test-install
          cd test-install
          npm init -y

      - name: Pack and install package
        run: |
          # Pack the package locally
          PACKAGE_NAME="${{ matrix.package }}"
          PACKAGE_DIR=$(echo $PACKAGE_NAME | sed 's/@snapkit-studio\///')

          cd packages/$PACKAGE_DIR
          PACKED_FILE=$(npm pack --pack-destination /tmp/test-install)

          # Try to install the packed package
          cd /tmp/test-install
          npm install /tmp/test-install/$(basename $PACKED_FILE)

          # Verify installation
          if [ $? -eq 0 ]; then
            echo "‚úÖ ${{ matrix.package }} can be installed externally"
          else
            echo "‚ùå Failed to install ${{ matrix.package }}"
            exit 1
          fi

      - name: Verify no workspace references
        run: |
          cd /tmp/test-install
          # Check that installed package doesn't contain workspace references
          PACKAGE_NAME="${{ matrix.package }}"
          PACKAGE_JSON="node_modules/$PACKAGE_NAME/package.json"

          if grep -q "workspace:\*" "$PACKAGE_JSON"; then
            echo "‚ùå Found workspace references in installed package"
            cat "$PACKAGE_JSON" | grep "workspace:"
            exit 1
          else
            echo "‚úÖ No workspace references in installed package"
          fi
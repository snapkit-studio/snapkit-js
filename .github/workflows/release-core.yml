name: Release Core Package

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even without package changes'
        required: false
        default: false
        type: boolean
      version_bump:
        description: 'Version bump type (auto analyzes commits, others override)'
        required: false
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major
      dry_run:
        description: 'Dry run (simulate deployment without publishing)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    name: Release @snapkit-studio/core
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      packages: write
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.name == 'CI')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 1: Detect changes
      - name: Detect package changes
        id: changes
        uses: ./.github/actions/detect-package-changes
        with:
          package-name: core
          package-path: packages/core/
          force-deploy: ${{ github.event.inputs.force_deploy }}
          event-name: ${{ github.event_name }}

      # Step 2: Build if changes detected
      - name: Build package
        if: steps.changes.outputs.skip != 'true'
        run: pnpm exec turbo build --filter @snapkit-studio/core

      # Step 3: Determine version
      - name: Determine version
        if: steps.changes.outputs.skip != 'true'
        id: version
        uses: ./.github/actions/determine-package-version
        with:
          package-name: core
          package-path: packages/core/
          version-bump-type: ${{ github.event.inputs.version_bump }}
          event-name: ${{ github.event_name }}
          changed-commits: ${{ steps.changes.outputs.changed-commits }}

      # Step 4: Publish package (to NPM and GitHub Packages)
      - name: Publish package
        if: steps.changes.outputs.skip != 'true'
        id: publish
        uses: ./.github/actions/publish-npm-package
        with:
          package-name: "@snapkit-studio/core"
          package-path: packages/core/
          version: ${{ steps.version.outputs.version }}
          tag: ${{ steps.version.outputs.tag }}
          dry-run: ${{ github.event.inputs.dry_run }}
          npm-token: ${{ secrets.NPM_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gh-token: ${{ secrets.GH_TOKEN }}

      # Step 5: Send notifications
      - name: Notify Slack - Success
        if: steps.changes.outputs.skip != 'true' && github.event.inputs.dry_run != 'true' && steps.publish.outputs.version-exists != 'true'
        uses: ./.github/actions/notify-slack-deployment
        with:
          status: success
          package-name: "@snapkit-studio/core"
          package-short-name: core
          version: ${{ steps.version.outputs.version }}
          commit-count: ${{ steps.changes.outputs.commit-count }}
          changed-commits: ${{ steps.changes.outputs.changed-commits }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack - Skipped
        if: steps.changes.outputs.skip == 'true' || steps.publish.outputs.version-exists == 'true'
        uses: ./.github/actions/notify-slack-deployment
        with:
          status: skipped
          package-name: "@snapkit-studio/core"
          package-short-name: core
          skip-reason: ${{ steps.changes.outputs.skip-reason }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
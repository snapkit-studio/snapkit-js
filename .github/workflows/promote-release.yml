name: Promote to Stable

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Canary version to promote'
        required: true
        type: string
      tag:
        description: 'Release tag'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: write

jobs:
  promote-to-stable:
    name: Promote Canary to Stable
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Exit Prerelease Mode
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Exit prerelease mode
          npx changeset pre exit || echo "Not in prerelease mode"

          # Commit changes
          git add .
          git commit -m "ci: exit prerelease mode" || echo "No changes to commit"

      - name: Create Stable Version
        id: stable_version
        run: |
          # Remove pre-release suffix from versions
          npx changeset version

          # Get stable versions
          CORE_VERSION=$(node -p "require('./packages/core/package.json').version")
          REACT_VERSION=$(node -p "require('./packages/react/package.json').version")
          NEXTJS_VERSION=$(node -p "require('./packages/nextjs/package.json').version")

          echo "core_version=${CORE_VERSION}" >> $GITHUB_OUTPUT
          echo "react_version=${REACT_VERSION}" >> $GITHUB_OUTPUT
          echo "nextjs_version=${NEXTJS_VERSION}" >> $GITHUB_OUTPUT

          echo "üì¶ Stable versions:"
          echo "  - @snapkit-studio/core: ${CORE_VERSION}"
          echo "  - @snapkit-studio/react: ${REACT_VERSION}"
          echo "  - @snapkit-studio/nextjs: ${NEXTJS_VERSION}"

          # Commit version changes
          git add .
          git commit -m "chore: release stable versions

          - @snapkit-studio/core@${CORE_VERSION}
          - @snapkit-studio/react@${REACT_VERSION}
          - @snapkit-studio/nextjs@${NEXTJS_VERSION}" || echo "No version changes"

      - name: Build Packages
        run: pnpm build

      - name: Prepare for NPM Publishing
        run: |
          # Prepare release packages
          pnpm prepare-release

      - name: Publish to NPM
        id: npm_publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Publish packages to NPM
          echo "Publishing to NPM..."

          # Publish core
          cd packages/core
          npm publish --access public
          cd ../..

          # Publish react
          cd packages/react
          npm publish --access public
          cd ../..

          # Publish nextjs
          cd packages/nextjs
          npm publish --access public
          cd ../..

          echo "npm_published=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Published to NPM successfully"

      - name: Create GitHub Release
        id: github_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.stable_version.outputs.core_version }}"
          TAG="v${VERSION}"

          # Create release notes
          cat > release-notes.md << EOF
          # üéâ Release ${TAG}

          ## üì¶ Published Packages
          - **@snapkit-studio/core**: ${{ steps.stable_version.outputs.core_version }}
          - **@snapkit-studio/react**: ${{ steps.stable_version.outputs.react_version }}
          - **@snapkit-studio/nextjs**: ${{ steps.stable_version.outputs.nextjs_version }}

          ## ‚úÖ Quality Assurance
          This release has passed all canary tests:
          - ‚úÖ E2E Tests
          - ‚úÖ SSR Tests
          - ‚úÖ Build Verification

          ## üì• Installation
          \`\`\`bash
          npm install @snapkit-studio/core@${{ steps.stable_version.outputs.core_version }}
          npm install @snapkit-studio/react@${{ steps.stable_version.outputs.react_version }}
          npm install @snapkit-studio/nextjs@${{ steps.stable_version.outputs.nextjs_version }}
          \`\`\`

          ## üîó Links
          - [NPM - @snapkit-studio/core](https://www.npmjs.com/package/@snapkit-studio/core)
          - [NPM - @snapkit-studio/react](https://www.npmjs.com/package/@snapkit-studio/react)
          - [NPM - @snapkit-studio/nextjs](https://www.npmjs.com/package/@snapkit-studio/nextjs)
          EOF

          # Create GitHub release
          gh release create "${TAG}" \
            --title "Release ${TAG}" \
            --notes-file release-notes.md \
            --latest

          echo "github_released=true" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Push Changes
        run: |
          git push origin main --tags

      - name: Clean Up Changesets
        run: |
          # Remove changeset files that have been released
          rm -f .changeset/*.md
          git add .
          git commit -m "chore: clean up changesets after release" || echo "No changesets to clean"
          git push origin main

      - name: Slack Notification - Release Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              attachments: [{
                color: 'good',
                title: 'üéâ Stable Release Published',
                text: 'A new stable version has been successfully published to NPM.',
                fields: [
                  {
                    title: 'Core Version',
                    value: '${{ steps.stable_version.outputs.core_version }}',
                    short: true
                  },
                  {
                    title: 'React Version',
                    value: '${{ steps.stable_version.outputs.react_version }}',
                    short: true
                  },
                  {
                    title: 'NextJS Version',
                    value: '${{ steps.stable_version.outputs.nextjs_version }}',
                    short: true
                  },
                  {
                    title: 'Tag',
                    value: '${{ steps.github_release.outputs.tag }}',
                    short: true
                  },
                  {
                    title: 'NPM',
                    value: '‚úÖ Published',
                    short: true
                  },
                  {
                    title: 'GitHub Release',
                    value: '‚úÖ Created',
                    short: true
                  }
                ],
                actions: [
                  {
                    type: 'button',
                    text: 'View on NPM',
                    url: 'https://www.npmjs.com/package/@snapkit-studio/core'
                  },
                  {
                    type: 'button',
                    text: 'View Release',
                    url: 'https://github.com/${{ github.repository }}/releases/tag/${{ steps.github_release.outputs.tag }}'
                  }
                ],
                footer: 'GitHub Actions',
                footer_icon: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

      - name: Slack Notification - Release Failed
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              attachments: [{
                color: 'danger',
                title: '‚ùå Stable Release Failed',
                text: 'Failed to promote canary to stable release.',
                fields: [
                  {
                    title: 'Error',
                    value: 'Check workflow logs for details',
                    short: false
                  }
                ],
                actions: [
                  {
                    type: 'button',
                    text: 'View Logs',
                    url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
                  }
                ],
                footer: 'GitHub Actions',
                footer_icon: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png'
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true
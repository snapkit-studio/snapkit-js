name: Release Packages

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.16.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build before calling changeset publish
          publish: pnpm changeset:publish
          version: pnpm changeset:version
          commit: "chore: release packages"
          title: "chore: release packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node.js for GitHub Package Registry
        if: steps.changesets.outputs.published == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          scope: '@snapkit-studio'

      - name: Publish to GitHub Package Registry
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "üì¶ Publishing to GitHub Package Registry..."

          # Configure npm for GitHub registry
          echo "@snapkit-studio:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

          # Publish each package to GitHub registry
          for package in packages/core packages/react packages/nextjs; do
            if [ -d "$package" ]; then
              cd "$package"
              echo "Publishing $(basename $package) to GitHub Package Registry..."
              npm publish --registry=https://npm.pkg.github.com || echo "Failed to publish $(basename $package) to GitHub registry"
              cd ../..
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send Slack notification on success
        if: steps.changesets.outputs.published == 'true'
        uses: slackapi/slack-github-action@v2.1.0
        with:
          payload: |
            {
              "channel": "#releases",
              "username": "SnapKit Release Bot",
              "icon_emoji": ":rocket:",
              "attachments": [
                {
                  "color": "good",
                  "title": "üéâ Release Success!",
                  "fields": [
                    {
                      "title": "üì¶ NPM Registry",
                      "value": "${{ steps.changesets.outputs.publishedPackages }}",
                      "short": false
                    },
                    {
                      "title": "üì¶ GitHub Package Registry",
                      "value": "Published successfully",
                      "short": true
                    },
                    {
                      "title": "üë§ Author",
                      "value": "${{ github.actor }}",
                      "short": true
                    }
                  ],
                  "footer": "SnapKit Release System",
                  "footer_icon": "https://github.com/snapkit-studio.png",
                  "ts": ${{ github.event.head_commit.timestamp }}
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification on failure
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          payload: |
            {
              "channel": "#releases",
              "username": "SnapKit Release Bot",
              "icon_emoji": ":x:",
              "attachments": [
                {
                  "color": "danger",
                  "title": "‚ùå Release Failed!",
                  "fields": [
                    {
                      "title": "üö´ Workflow",
                      "value": "${{ github.workflow }}",
                      "short": true
                    },
                    {
                      "title": "üë§ Author",
                      "value": "${{ github.actor }}",
                      "short": true
                    },
                    {
                      "title": "üîó Action Run",
                      "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>",
                      "short": false
                    },
                    {
                      "title": "üîó Commit",
                      "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                      "short": false
                    }
                  ],
                  "footer": "Please check the workflow logs and fix any issues.",
                  "footer_icon": "https://github.com/snapkit-studio.png",
                  "ts": ${{ github.event.head_commit.timestamp }}
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
name: Test External Next.js with Canary

on:
  push:
    branches: [main]
    paths:
      - 'packages/**'
      - 'test-fixtures/**'
      - '.github/workflows/test-external-nextjs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/**'
      - 'test-fixtures/**'
      - '.github/workflows/test-external-nextjs.yml'

jobs:
  publish-canary:
    runs-on: ubuntu-latest
    outputs:
      core-version: ${{ steps.publish.outputs.core-version }}
      react-version: ${{ steps.publish.outputs.react-version }}
      nextjs-version: ${{ steps.publish.outputs.nextjs-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Generate canary versions
        id: versions
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          COMMIT_SHA=${GITHUB_SHA::7}
          CANARY_SUFFIX="canary.${TIMESTAMP}.${COMMIT_SHA}"

          echo "core-version=1.9.0-${CANARY_SUFFIX}" >> $GITHUB_OUTPUT
          echo "react-version=1.7.0-${CANARY_SUFFIX}" >> $GITHUB_OUTPUT
          echo "nextjs-version=1.7.0-${CANARY_SUFFIX}" >> $GITHUB_OUTPUT

      - name: Update package versions for canary release
        run: |
          # Update package.release.json versions
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.versions.outputs.core-version }}\"/" packages/core/package.release.json
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.versions.outputs.react-version }}\"/" packages/react/package.release.json
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.versions.outputs.nextjs-version }}\"/" packages/nextjs/package.release.json

          # Update react dependency in nextjs package
          sed -i "s/\"@snapkit-studio\/react\": \".*\"/\"@snapkit-studio\/react\": \"${{ steps.versions.outputs.react-version }}\"/" packages/nextjs/package.release.json
          # Update core dependencies
          sed -i "s/\"@snapkit-studio\/core\": \".*\"/\"@snapkit-studio\/core\": \"${{ steps.versions.outputs.core-version }}\"/" packages/react/package.release.json
          sed -i "s/\"@snapkit-studio\/core\": \".*\"/\"@snapkit-studio\/core\": \"${{ steps.versions.outputs.core-version }}\"/" packages/nextjs/package.release.json

      - name: Prepare and publish canary versions
        id: publish
        run: |
          # Prepare packages for release
          pnpm prepare-release

          # Configure NPM authentication
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

          # Publish in dependency order with canary tag
          echo "Publishing core package..."
          cd packages/core
          npm publish --tag canary --access public
          cd ../..

          echo "Publishing react package..."
          cd packages/react
          npm publish --tag canary --access public
          cd ../..

          echo "Publishing nextjs package..."
          cd packages/nextjs
          npm publish --tag canary --access public
          cd ../..

          # Set outputs for other jobs
          echo "core-version=${{ steps.versions.outputs.core-version }}" >> $GITHUB_OUTPUT
          echo "react-version=${{ steps.versions.outputs.react-version }}" >> $GITHUB_OUTPUT
          echo "nextjs-version=${{ steps.versions.outputs.nextjs-version }}" >> $GITHUB_OUTPUT
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  test-external-app:
    needs: publish-canary
    runs-on: ubuntu-latest
    env:
      CORE_VERSION: ${{ needs.publish-canary.outputs.core-version }}
      REACT_VERSION: ${{ needs.publish-canary.outputs.react-version }}
      NEXTJS_VERSION: ${{ needs.publish-canary.outputs.nextjs-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup external test app
        run: |
          # Copy test fixture to temp directory
          cp -r test-fixtures/nextjs-external-app /tmp/test-app
          cd /tmp/test-app

          # Replace placeholders in package.json template with canary versions
          sed "s|CORE_TARBALL_PATH|$CORE_VERSION|g" package.json.template > package.json.tmp
          sed "s|REACT_TARBALL_PATH|$REACT_VERSION|g" package.json.tmp > package.json.tmp2
          sed "s|NEXTJS_TARBALL_PATH|$NEXTJS_VERSION|g" package.json.tmp2 > package.json
          rm package.json.tmp package.json.tmp2

          # Install dependencies from NPM registry
          npm install

      - name: Build external test app
        run: |
          cd /tmp/test-app
          npm run build

      - name: Install Playwright browsers
        run: |
          cd /tmp/test-app
          npx playwright install chromium

      - name: Run E2E tests
        run: |
          cd /tmp/test-app
          npx playwright test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-node22
          path: /tmp/test-app/test-results/
          retention-days: 7

      - name: Upload trace on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-node22
          path: /tmp/test-app/test-results/
          retention-days: 7

  test-ssr-hydration:
    runs-on: ubuntu-latest
    needs: publish-canary
    env:
      CORE_VERSION: ${{ needs.publish-canary.outputs.core-version }}
      REACT_VERSION: ${{ needs.publish-canary.outputs.react-version }}
      NEXTJS_VERSION: ${{ needs.publish-canary.outputs.nextjs-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup and test SSR
        run: |
          cp -r test-fixtures/nextjs-external-app /tmp/ssr-test
          cd /tmp/ssr-test

          # Setup package.json with canary versions
          sed "s|CORE_TARBALL_PATH|$CORE_VERSION|g" package.json.template > package.json.tmp
          sed "s|REACT_TARBALL_PATH|$REACT_VERSION|g" package.json.tmp > package.json.tmp2
          sed "s|NEXTJS_TARBALL_PATH|$NEXTJS_VERSION|g" package.json.tmp2 > package.json
          rm package.json.tmp package.json.tmp2

          # Install dependencies from NPM registry
          npm install
          npm run build

          # Test production build
          npm run start &
          sleep 10

          # Test SSR output
          curl -s http://localhost:3000/test-server | grep -q "data-testid=\"server-image-basic\""
          if [ $? -eq 0 ]; then
            echo "✅ SSR test passed: ServerImage rendered correctly"
          else
            echo "❌ SSR test failed: ServerImage not found in HTML"
            exit 1
          fi

          # Kill the server
          kill %1

  test-client-hydration:
    runs-on: ubuntu-latest
    needs: publish-canary
    env:
      CORE_VERSION: ${{ needs.publish-canary.outputs.core-version }}
      REACT_VERSION: ${{ needs.publish-canary.outputs.react-version }}
      NEXTJS_VERSION: ${{ needs.publish-canary.outputs.nextjs-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare and test hydration
        run: |
          cp -r test-fixtures/nextjs-external-app /tmp/hydration-test
          cd /tmp/hydration-test

          # Setup package.json with canary versions
          sed "s|CORE_TARBALL_PATH|$CORE_VERSION|g" package.json.template > package.json.tmp
          sed "s|REACT_TARBALL_PATH|$REACT_VERSION|g" package.json.tmp > package.json.tmp2
          sed "s|NEXTJS_TARBALL_PATH|$NEXTJS_VERSION|g" package.json.tmp2 > package.json
          rm package.json.tmp package.json.tmp2

          # Install dependencies from NPM registry
          npm install
          npx playwright install chromium

          # Run specific hydration test
          npx playwright test client-interaction.spec.ts --reporter=list

  cleanup-canary:
    runs-on: ubuntu-latest
    needs: [publish-canary, test-external-app, test-ssr-hydration, test-client-hydration]
    if: always()

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'

      - name: Cleanup canary versions
        run: |
          # Configure NPM authentication
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc

          # Unpublish canary versions (optional - for cleanup)
          echo "Cleaning up canary versions..."
          npm unpublish @snapkit-studio/nextjs@${{ needs.publish-canary.outputs.nextjs-version }} --force || echo "NextJS package cleanup failed or already removed"
          npm unpublish @snapkit-studio/react@${{ needs.publish-canary.outputs.react-version }} --force || echo "React package cleanup failed or already removed"
          npm unpublish @snapkit-studio/core@${{ needs.publish-canary.outputs.core-version }} --force || echo "Core package cleanup failed or already removed"

          echo "Canary cleanup completed"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-test-report:
    runs-on: ubuntu-latest
    needs: [test-external-app, test-ssr-hydration, test-client-hydration]
    if: always()

    steps:
      - name: Download all test artifacts
        uses: actions/download-artifact@v3

      - name: Publish test summary
        run: |
          echo "## External Next.js App Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -d "playwright-report-node22" ]; then
            echo "### Node 18.x Tests" >> $GITHUB_STEP_SUMMARY
            echo "✅ Tests completed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ServerImage rendering" >> $GITHUB_STEP_SUMMARY
          echo "- ClientImage interactions" >> $GITHUB_STEP_SUMMARY
          echo "- Auto component selection" >> $GITHUB_STEP_SUMMARY
          echo "- SSR/Hydration validation" >> $GITHUB_STEP_SUMMARY
